# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build - C5-Envelope

on:
  push:
    # Sequence of patterns matched against refs/tags
    #tags:
    #  - 'dev'
    #  - 'prod'
    branches: [ main ]

  pull_request:
    branches: [ '**' ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
          node-version: ${{ matrix.node-version }}

    - name: Patch Version ${{ env.GITHUB_REF }}
      run: |
       node patch-package.json.js "origin/head/0.0.0-smoke"
       git diff

    - name: Build JS Envelope
      run: |
        rm -rf ./dist
        npm ci
        npm install
        npm run build
        npm run test
        npm pack

    - name: Smoke JS
      run: |
        cd smoke
        npm init -y -f
        npm install ../c5-envelope-0.0.0-smoke.tgz 
        npm install ts-node --global
        ts-node smoke.ts

    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        architecture: 'x64'

    - name: Build PYTHON Envelope
      run: |
        rm -rf ./dist
        npm run generate-python
        python3 --version
        python3 -m pip install --upgrade -r requirements.txt
        python3 -m src.simple_envelope_test
        python3 -m build

    - name: Smoke Python
      run: |
        cd smoke
        python3 -m venv .
        bin/pip3 install ../dist/c5_envelope-0.0.0_smoke-py3-none-any.whl
        bin/python3 smoke.py

    - name: Set variables
      run: |
        GO_VER=$(grep -m 1 -o -E "([0-9]+(.)[0-9]+)" go.mod)
        echo "GO_VERSION=$GO_VER" >> $GITHUB_ENV

    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build Golang Envelope
      run: |
        pushd src
        go build -o bin/simple_envelope
        go test ./...